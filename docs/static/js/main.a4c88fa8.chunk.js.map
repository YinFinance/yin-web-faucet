{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["abi","abiJSON","signer","ethers","providers","Web3Provider","window","ethereum","getSigner","faucetContract","Contract","App","useState","address","setAddress","buttonText","setButtonText","mintTokens","t","a","preventDefault","enable","accounts","estimateGas","mint","alert","className","href","onSubmit","target","type","name","value","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"25DAMIA,EAAMC,EAEJC,EADW,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UAClCC,YAElBC,EAAiB,IAAIN,IAAOO,SADV,6CACoCV,EAAKE,GAmDlDS,MAjDf,WAAgB,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAEsBF,mBAAS,WAF/B,mBAEPG,EAFO,KAEKC,EAFL,KAIRC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBD,EAAEE,iBACFJ,EAAc,iBAFG,SAGMV,OAAOC,SAASc,SAHtB,cAGXC,EAHW,OAIDA,EAAS,GAJR,SAKCb,EAAec,YAAYC,KAAKX,GALjC,+BAMEJ,EAAee,KAAKX,GANtB,eAOjBG,EAAc,WACdS,MAAM,iBARW,4CAAH,sDAWhB,OACE,sBAAKC,UAAU,QAAf,UACE,yBAAQA,UAAU,YAAlB,UACC,qBAAKA,UAAU,OAAf,iBACA,sBAAKA,UAAU,QAAf,UACA,qBAAKA,UAAU,gBAEb,mBAAGC,KAAK,4BAAR,kCAGH,qBAAKD,UAAU,OAAf,SACE,uBAAMA,UAAU,OAAOE,SAAUX,EAAjC,UACI,mBAAGS,UAAU,OAAOC,KAAK,6BAA6BE,OAAO,SAA7D,oCACD,6EACA,kDAAoB,mBAAGF,KAAK,kFAAkFE,OAAO,SAAjG,mBAApB,QAA4I,mBAAGF,KAAK,kFAAkFE,OAAO,SAAjG,kBAA5I,QAAmQ,mBAAGF,KAAK,kFAAkFE,OAAO,SAAjG,kBAAnQ,QAA0X,mBAAGF,KAAK,kFAAkFE,OAAO,SAAjG,kBAA1X,QAAif,mBAAGF,KAAK,kFAAkFE,OAAO,SAAjG,mBAAjf,kBAED,gCACE,uBACEH,UAAU,QACVI,KAAK,OACLC,KAAK,OACLC,MAAOnB,EACPoB,SAAU,SAACf,GAAD,OAAOJ,EAAWI,EAAEW,OAAOG,YAGzC,wBAAQN,UAAU,SAASI,KAAK,SAASE,MAAM,UAA/C,SACGjB,aCzCGmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCCdQ,IAAY,CACVC,IAAK,4EACLC,aAAc,CAAC,IAAIC,IAAaC,gBAChCC,iBAAkB,KAGpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.a4c88fa8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport abiJSON from \"./faucet.json\";\n\nimport { ethers } from \"ethers\";\n\nlet abi = abiJSON;\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = provider.getSigner();\nconst contractAddress = \"0x60288dec3343db133a8288c70b8e151e52627ee2\";\nconst faucetContract = new ethers.Contract(contractAddress, abi, signer);\n\nfunction App() {\n const [address, setAddress] = useState(\"\")\n const [buttonText, setButtonText] = useState(\"Request\")\n\n const mintTokens = async (t) => {\n   t.preventDefault();\n   setButtonText(\"Requesting...\")\n   const accounts = await window.ethereum.enable();\n   const account = accounts[0];\n   const gas = await faucetContract.estimateGas.mint(address);\n   const post = await faucetContract.mint(address);\n   setButtonText(\"Request\")\n   alert(\"Mint success!\")\n };\n\n return (\n   <div className=\"cargo\">\n     <header className=\"AppHeader\">\n      <div className=\"logo\">YIN</div>\n      <div className=\"links\">\n      <div className=\"walletBlock\">\n        </div>\n        <a href='https://alpha.yin.finance'>Alpha Test YIN</a>\n      </div>\n    </header>\n     <div className=\"case\">\n       <form className=\"form\" onSubmit={mintTokens}>\n           <a className=\"link\" href='https://faucet.rinkeby.io/' target=\"_blank\">Get testnet ETH â†—</a>\n          <p>Request tokens from YIN Finance Alpha Faucet</p>\n          <p>You will get 200 <a href=\"https://rinkeby.etherscan.io/address/0x67751356e2ac7ca20cb991bf3edf7d4a439b7cbe\" target='_blank'>tusdt</a>, 200<a href=\"https://rinkeby.etherscan.io/address/0x8543a038bef4de734b4bc2235a97f7eaf439625f\" target='_blank'>tdai</a>, 200<a href=\"https://rinkeby.etherscan.io/address/0x130785fd1f629956d221d7226f4c03e1b692064a\" target='_blank'>tfei</a>, 200<a href=\"https://rinkeby.etherscan.io/address/0x849cdf076a4cccc724258d88caebfd566e808305\" target='_blank'>trai</a>, 200<a href=\"https://rinkeby.etherscan.io/address/0x3ad6b1f58e37f17f295edc74200ce140bd3020c3\" target='_blank'>tusdc</a> in Rinkeby.</p>\n\n         <label>\n           <input\n             className=\"input\"\n             type=\"text\"\n             name=\"name\"\n             value={address}\n             onChange={(t) => setAddress(t.target.value)}\n           />\n         </label>\n         <button className=\"button\" type=\"submit\" value=\"Confirm\">\n           {buttonText}\n         </button>\n       </form>\n     </div>\n   </div>\n );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as Sentry from \"@sentry/browser\";\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://af9d16abc43b4c2a953aa69090d4b77c@o931505.ingest.sentry.io/5880490\",\n  integrations: [new Integrations.BrowserTracing()],\n  tracesSampleRate: 0.5,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}